{"version":3,"sources":["components/common/EventCard.js","components/common/DatePickerComponent.js","util/DateAndTimeUtil.js","constants/StateAssociationConstants.js","constants/ResponsiveConstants.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["EventCard","props","className","style","backgroundImage","this","background","backgroundSize","eventHeadline","eventSubHeadline","eventKey","dateFormat","eventStartTime","React","Component","DatePickerComponent","title","selected","date","onChange","setNewDate","clearEventList","NextDay","day","Date","nextDay","setDate","getDate","FormatDate","ASSOCIATION_KEYS","GSHA","UIL","STATE_ASSOCIATION_DROPDOWN_OPTIONS","responsive","superLargeDesktop","breakpoint","max","min","items","desktop","tablet","smallTablet","mobile","Home","_fetchEvents","stateAssociationKey","startDate","endDate","fetch","state","then","response","json","data","forEach","item","setState","events","publishers","broadcasts","_onSelect","newValue","value","_clearEvents","_renderEventCards","map","event","key","headline","subheadline","start_time","default_thumbnail","_renderEventsFilter","placeholder","options","onSelect","updateWindowDimensions","bind","window","addEventListener","prevProps","prevState","width","removeEventListener","innerWidth","height","innerHeight","containerClass","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5283aafa.chunk.js","sourcesContent":["import React from 'react';\nimport '../../styles/EventCard.css';\nimport dateFormat from 'dateformat';\n\nclass EventCard extends React.Component {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return <div className=\"card-content\">\n            <div style={{backgroundImage: `url(${this.props.background})`, backgroundSize: 'cover'}}>\n                <div className=\"event-card-header\">\n                    <p className=\"event-headline\">{this.props.eventHeadline}</p>\n                    <p className=\"event-subheadline\">{this.props.eventSubHeadline}</p>\n                    <p className=\"event-key\">{this.props.eventKey}</p>\n                </div>\n            </div>\n            <div className=\"event-card-bottom\">\n                <p className=\"event-start-time\">{dateFormat(this.props.eventStartTime, \" mmm d, yyyy | UTC:h:MM TT Z\")}</p>\n            </div>\n        </div>\n    }\n}\nexport default EventCard;","import React from 'react';\nimport '../../styles/DatePickerComponent.css';\nimport DatePicker from \"react-datepicker\";\n\nclass DatePickerComponent extends React.Component {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return <div className=\"date-picker-content\">\n            <p className=\"date-picker-title\">{this.props.title}</p>\n            <DatePicker selected={this.props.date} onChange={date => {this.props.setNewDate(date); this.props.clearEventList()}} />\n        </div>\n    }\n}\nexport default DatePickerComponent;","import dateFormat from 'dateformat';\n\nexport const NextDay = () => {\n    let day = new Date();\n    let nextDay = new Date(day);\n    nextDay.setDate(day.getDate() + 1);\n    return nextDay;   \n}\n\nexport const FormatDate = (date) => {\n    return dateFormat(date, \"yyyy-mm-dd\")\n}","export const ASSOCIATION_KEYS = {\n    GSHA: '18bad24aaa',\n    UIL: '542bc38f95',\n}\n\nexport const STATE_ASSOCIATION_DROPDOWN_OPTIONS = [\n    'GSHA',\n    'UIL',\n]","export const responsive = {\n    superLargeDesktop: {\n      // the naming can be any, depends on you.\n      breakpoint: { max: 4000, min: 3000 },\n      items: 5\n    },\n    desktop: {\n      breakpoint: { max: 3000, min: 1200 },\n      items: 3.1\n    },\n    tablet: {\n      breakpoint: { max: 1200, min: 1022 },\n      items: 3\n    },\n    smallTablet: {\n        breakpoint: { max: 1022, min: 510 },\n        items: 2.1\n      },\n    mobile: {\n      breakpoint: { max: 510, min: 0 },\n      items: 10\n    }\n};","import React from 'react';\nimport '../styles/Home.css';\nimport EventCard from './common/EventCard';\nimport {Dropdown} from 'react-dropdown-now';\nimport 'react-dropdown-now/style.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport DatePickerComponent from './common/DatePickerComponent';\nimport {NextDay, FormatDate} from '../util/DateAndTimeUtil'\nimport {ASSOCIATION_KEYS, STATE_ASSOCIATION_DROPDOWN_OPTIONS} from '../constants/StateAssociationConstants'\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport {responsive} from '../constants/ResponsiveConstants'\n\nconst apiUrl = (stateAssociationKey, startDate, endDate) => 'https://challenge.nfhsnetwork.com/v2/search/events/upcoming?state_association_key=' + stateAssociationKey + '&amp;card=true&amp;size=50&amp;start=0&from=' + startDate + 'T00:00:00.000Z&to=' + endDate + 'T23:00:00.000Z';\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            events: [],\n            stateAssociationKey: ASSOCIATION_KEYS.GSHA,\n            startDate: new Date(),\n            endDate: NextDay(),\n        };\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    }\n\n    componentDidMount() {\n        this._fetchEvents()\n        this.updateWindowDimensions();\n        window.addEventListener(\"resize\", this.updateWindowDimensions.bind(this));\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.stateAssociationKey !== this.state.stateAssociationKey ||\n            prevState.startDate !== this.state.startDate ||\n            prevState.endDate !== this.state.endDate) {\n            this._fetchEvents()\n        }\n        if (prevState.width !== this.state.width) {\n            this.updateWindowDimensions();\n        }\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateWindowDimensions.bind(this));\n    }\n\n    updateWindowDimensions() {\n        this.setState({width: window.innerWidth, height: window.innerHeight});\n    }\n\n    _fetchEvents = () => {\n        fetch(apiUrl(this.state.stateAssociationKey, FormatDate(this.state.startDate), FormatDate(this.state.endDate)))\n            .then((response) => response.json())\n            .then((data) => {\n                const items = data.items;\n                items.forEach(item => {\n                    this.setState({events: [...this.state.events, item.publishers[0].broadcasts[0]]})\n                });\n            });\n    }\n\n    _onSelect = (newValue) => {\n        this.setState({events: [], stateAssociationKey: ASSOCIATION_KEYS[newValue.value]})\n    }\n\n    _clearEvents = () => {\n        this.setState({events: []})\n    }\n\n    _renderEventCards = () => {\n        return this.state.events.map(event =>\n            <EventCard\n                key={event.key}\n                eventKey={event.key}\n                eventHeadline={event.headline}\n                eventSubHeadline={event.subheadline}\n                eventStartTime={event.start_time}\n                background={event.default_thumbnail}\n            />\n        )\n    }\n\n    _renderEventsFilter = () => {\n        return <div className=\"events-filter-content\">\n            <div className=\"events-state-association-dropdown-content\">\n                <p className=\"events-state-association-dropdown-title\">State Association:</p>\n                <Dropdown\n                    placeholder=\"Select an option\"\n                    className=\"events-dropdown\"\n                    options={STATE_ASSOCIATION_DROPDOWN_OPTIONS}\n                    value={STATE_ASSOCIATION_DROPDOWN_OPTIONS[0]}\n                    onSelect={(value) => this._onSelect(value)}\n                />\n            </div>\n            <DatePickerComponent title='Start Date:' date={this.state.startDate} clearEventList={() => this._clearEvents()} setNewDate={(date) => this.setState({startDate: date})} />\n            <DatePickerComponent title='End Date:' date={this.state.endDate} clearEventList={() => this._clearEvents()} setNewDate={(date) => this.setState({endDate: date})} />\n        </div>\n    }\n\n    render() {\n        return <div className=\"main\">\n            <section className=\"events-filter\">\n                {this._renderEventsFilter()}\n            </section>\n            <section className=\"events-carrousel\">\n                {this.state.width < 510 ? this._renderEventCards() : <Carousel responsive={responsive} containerClass=\"carousel-container\">\n                    {this._renderEventCards()}\n                </Carousel>}\n            </section>\n        </div>\n    }\n}\nexport default Home;","import './styles/App.css';\nimport Home from './components/Home';\n\nfunction App() {\n  return (\n    <Home />       \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}